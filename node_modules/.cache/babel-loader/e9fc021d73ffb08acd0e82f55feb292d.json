{"ast":null,"code":"var _jsxFileName = \"/Users/santi/Desktop/TinyDesktop/Work/Website/personal-website/src/Components/Tabs.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Put arrow on selected tab =)\nclass Tabs extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.rendered_page_index = 0;\n\n    this.openProject = id => {\n      this.rendered_page_index = id;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Yeet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n  /*\n  render() {\n      console.log(\"got here\");\n      const { titles, descriptors, illustrations, prefix } = this.props;\n      const openProject = this.openProject;\n      let tabs = [];\n      let pages = [];\n      let rendered_page;\n       for (let i = 0; i < titles.length; i++) {\n          tabs.push(\n              <button className={prefix+\"Tabs\"} onClick={()=>{openProject(i)}}></button>\n          );\n      }\n      \n       for (let i = 0; i < titles.length; i++) {\n          pages.push(\n              <div id={prefix + titles + i} className=\"tabContent\">\n                  <div className=\"tabDescriptor\">\n                      <h3>{titles[i]}</h3>\n                      {descriptors[i].map(paragraph => <p>{paragraph}</p>)}\n                  </div>\n                  <div className=\"tabDisplay\">\n                      <img src={illustrations[i]} alt=\"Illustrative Image\" />\n                  </div>\n              </div>\n          );\n      }\n       rendered_page = pages[this.rendered_page_index];\n       return (\n          <div id={prefix + \"Tab\"} className=\"tabs\">\n              {tabs}\n              {pages}\n          </div>\n      );\n  }*/\n\n\n}\n\nexport default Tabs;","map":{"version":3,"names":["React","Tabs","PureComponent","rendered_page_index","openProject","id","render"],"sources":["/Users/santi/Desktop/TinyDesktop/Work/Website/personal-website/src/Components/Tabs.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface Props {\n    titles: string[],\n    descriptors: string[][],\n    illustrations: string[],\n    prefix: string\n}\n\n\n// Put arrow on selected tab =)\nclass Tabs extends React.PureComponent<Props>{\n    rendered_page_index = 0;\n\n    openProject = (id: number) => {\n        this.rendered_page_index = id;\n    }\n\n    render(){\n        return(<p>{\"Yeet\"}</p>);\n    }\n    /*\n    render() {\n        console.log(\"got here\");\n        const { titles, descriptors, illustrations, prefix } = this.props;\n        const openProject = this.openProject;\n        let tabs = [];\n        let pages = [];\n        let rendered_page;\n\n        for (let i = 0; i < titles.length; i++) {\n            tabs.push(\n                <button className={prefix+\"Tabs\"} onClick={()=>{openProject(i)}}></button>\n            );\n        }\n        \n\n        for (let i = 0; i < titles.length; i++) {\n            pages.push(\n                <div id={prefix + titles + i} className=\"tabContent\">\n                    <div className=\"tabDescriptor\">\n                        <h3>{titles[i]}</h3>\n                        {descriptors[i].map(paragraph => <p>{paragraph}</p>)}\n                    </div>\n                    <div className=\"tabDisplay\">\n                        <img src={illustrations[i]} alt=\"Illustrative Image\" />\n                    </div>\n                </div>\n            );\n        }\n\n        rendered_page = pages[this.rendered_page_index];\n\n        return (\n            <div id={prefix + \"Tab\"} className=\"tabs\">\n                {tabs}\n                {pages}\n            </div>\n        );\n    }*/\n}\n\n\nexport default Tabs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAUA;AACA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,aAAzB,CAA6C;EAAA;IAAA;IAAA,KACzCC,mBADyC,GACnB,CADmB;;IAAA,KAGzCC,WAHyC,GAG1BC,EAAD,IAAgB;MAC1B,KAAKF,mBAAL,GAA2BE,EAA3B;IACH,CALwC;EAAA;;EAOzCC,MAAM,GAAE;IACJ,oBAAO;MAAA,UAAI;IAAJ;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA5C6C;;AAoD7C,eAAeL,IAAf"},"metadata":{},"sourceType":"module"}