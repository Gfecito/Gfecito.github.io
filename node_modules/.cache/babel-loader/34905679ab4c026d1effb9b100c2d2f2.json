{"ast":null,"code":"var _jsxFileName = \"/Users/santi/Desktop/TinyDesktop/Work/Website/personal-website/src/Components/Navbar.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Navbar extends React.PureComponent {\n  // Since I'll have less than 10 sections, I'll just cover 1 digit cases.\n  toRoman(number) {\n    let roman_numeral = \"\"; // Special cases.\n\n    if (number >= 10) return \"You have too many sections.\";\n    if (number == 4) return \"IV\"; // General case\n\n    if (number > 5) {\n      number -= 5;\n      roman_numeral += \"V\";\n    }\n\n    for (var i = 0; i < number; i++) {\n      roman_numeral += \"I\";\n    }\n\n    return roman_numeral;\n  }\n\n  render() {\n    const {\n      sections\n    } = this.props;\n    var nav_elements = [];\n    var element_count = 1;\n    sections.forEach(section => {\n      nav_elements.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"nav_element\",\n        href: \"index.html#\" + section,\n        children: this.toRoman(element_count)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 31\n      }, this));\n      element_count++;\n    });\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      id: \"nav\",\n      children: nav_elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"names":["React","Navbar","PureComponent","toRoman","number","roman_numeral","i","render","sections","props","nav_elements","element_count","forEach","section","push"],"sources":["/Users/santi/Desktop/TinyDesktop/Work/Website/personal-website/src/Components/Navbar.tsx"],"sourcesContent":["import React from 'react';\n\n\nexport interface Props {\n    sections: string[],\n}\n\nclass Navbar extends React.PureComponent<Props>{\n\n    // Since I'll have less than 10 sections, I'll just cover 1 digit cases.\n    toRoman(number: number) : string {\n        let roman_numeral: string = \"\";        \n\n        // Special cases.\n        if(number>=10) return \"You have too many sections.\";\n        if(number==4) return \"IV\";\n\n        // General case\n        if(number>5) {number -= 5; roman_numeral += \"V\";}\n        for(var i=0; i<number; i++){\n            roman_numeral+=\"I\";\n        }\n        return roman_numeral;\n    }\n\n    render() {\n        const { sections } = this.props;\n        var nav_elements = [];\n        var element_count = 1;\n\n        sections.forEach(section => {\n            nav_elements.push(<a className=\"nav_element\" href={\"index.html#\"+section}>{this.toRoman(element_count)}</a>);\n            element_count++;\n        });\n\n        return (\n            <nav id=\"nav\">\n                {nav_elements}\n            </nav>\n        )\n    }\n}\n\nexport default Navbar;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAOA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,aAA3B,CAA+C;EAE3C;EACAC,OAAO,CAACC,MAAD,EAA0B;IAC7B,IAAIC,aAAqB,GAAG,EAA5B,CAD6B,CAG7B;;IACA,IAAGD,MAAM,IAAE,EAAX,EAAe,OAAO,6BAAP;IACf,IAAGA,MAAM,IAAE,CAAX,EAAc,OAAO,IAAP,CALe,CAO7B;;IACA,IAAGA,MAAM,GAAC,CAAV,EAAa;MAACA,MAAM,IAAI,CAAV;MAAaC,aAAa,IAAI,GAAjB;IAAsB;;IACjD,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,MAAf,EAAuBE,CAAC,EAAxB,EAA2B;MACvBD,aAAa,IAAE,GAAf;IACH;;IACD,OAAOA,aAAP;EACH;;EAEDE,MAAM,GAAG;IACL,MAAM;MAAEC;IAAF,IAAe,KAAKC,KAA1B;IACA,IAAIC,YAAY,GAAG,EAAnB;IACA,IAAIC,aAAa,GAAG,CAApB;IAEAH,QAAQ,CAACI,OAAT,CAAiBC,OAAO,IAAI;MACxBH,YAAY,CAACI,IAAb,eAAkB;QAAG,SAAS,EAAC,aAAb;QAA2B,IAAI,EAAE,gBAAcD,OAA/C;QAAA,UAAyD,KAAKV,OAAL,CAAaQ,aAAb;MAAzD;QAAA;QAAA;QAAA;MAAA,QAAlB;MACAA,aAAa;IAChB,CAHD;IAKA,oBACI;MAAK,EAAE,EAAC,KAAR;MAAA,UACKD;IADL;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;AAjC0C;;AAoC/C,eAAeT,MAAf"},"metadata":{},"sourceType":"module"}