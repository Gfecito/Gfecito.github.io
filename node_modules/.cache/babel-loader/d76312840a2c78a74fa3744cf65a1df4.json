{"ast":null,"code":"var _jsxFileName = \"/Users/santi/Desktop/TinyDesktop/Work/Website/personal-website/src/Components/Tabs.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Put arrow on selected tab =)\nclass Tabs extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.rendered_page_index = 0;\n\n    this.openProject = id => {\n      this.rendered_page_index = id;\n      this.forceUpdate();\n    };\n  }\n\n  render() {\n    const {\n      titles,\n      descriptors,\n      illustrations,\n      prefix\n    } = this.props;\n    const openProject = this.openProject.bind(this);\n    let tabs = [];\n    let pages = [];\n    let rendered_page;\n\n    for (let i = 0; i < titles.length; i++) {\n      let words = titles[i].split(\" \");\n      let abbreviation;\n\n      const filter = word => {\n        return word.charAt(0) >= '0' && word.charAt(0) <= '9' || word.length <= 5;\n      };\n\n      const initialCapitalizer = word => {\n        return word.charAt(0).toUpperCase();\n      };\n\n      const adaptPhraseAndJoin = (phrase, filter, newWord) => {\n        return phrase.split(\" \").map(word => filter(word) ? word + \" \" : newWord(word)).join(\"\");\n      };\n\n      const firstThree = word => {\n        return initialCapitalizer(word) + word.substr(1, 2);\n      };\n\n      if (words.length == 1) abbreviation = words[0].substr(0, 6);\n\n      if (words.length == 2) {\n        abbreviation = adaptPhraseAndJoin(titles[i], filter, firstThree);\n      }\n\n      if (words.length > 2) {\n        abbreviation = words.map(word => filter(word) ? word + \" \" : initialCapitalizer(word)).join(\"\");\n      }\n\n      tabs.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: prefix + \"Tabs\",\n        onClick: () => {\n          openProject(i);\n        },\n        children: abbreviation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this));\n    }\n\n    for (let i = 0; i < titles.length; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        id: prefix + titles + i,\n        className: \"tabContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabDescriptor\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: titles[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), descriptors[i].map(paragraph => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraph\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 58\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabDisplay\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: illustrations[i],\n            alt: \"Illustrative Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this));\n    }\n\n    rendered_page = pages[this.rendered_page_index];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: prefix + \"Window\",\n      className: \"tabs_and_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: prefix + \"Tabs\",\n        className: \"tabs\",\n        style: {\n          gridTemplateColumns: \"repeat(\" + titles.length + \",minmax(min-content,max-content))\"\n        },\n        children: tabs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: prefix + \"Content\",\n        className: \"Content\",\n        children: rendered_page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Tabs;","map":{"version":3,"names":["React","Tabs","PureComponent","rendered_page_index","openProject","id","forceUpdate","render","titles","descriptors","illustrations","prefix","props","bind","tabs","pages","rendered_page","i","length","words","split","abbreviation","filter","word","charAt","initialCapitalizer","toUpperCase","adaptPhraseAndJoin","phrase","newWord","map","join","firstThree","substr","push","paragraph","gridTemplateColumns"],"sources":["/Users/santi/Desktop/TinyDesktop/Work/Website/personal-website/src/Components/Tabs.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface Props {\n    titles: string[],\n    descriptors: string[][],\n    illustrations: string[],\n    prefix: string\n}\n\n\n// Put arrow on selected tab =)\nclass Tabs extends React.PureComponent<Props>{\n    rendered_page_index = 0;\n\n    openProject = (id: number) => {\n        this.rendered_page_index = id;\n        this.forceUpdate();\n    }\n\n    render() {\n        const { titles, descriptors, illustrations, prefix } = this.props;\n        const openProject = this.openProject.bind(this);\n        let tabs = [];\n        let pages = [];\n        let rendered_page;\n\n\n        for (let i = 0; i < titles.length; i++) {\n            let words = titles[i].split(\" \");\n            let abbreviation;\n            const filter = (word:string)=>{return(((word.charAt(0)) >= '0' && (word.charAt(0)) <= '9') || (word.length <= 5));};\n            const initialCapitalizer = (word:string)=>{return(word.charAt(0).toUpperCase())};\n            const adaptPhraseAndJoin = (phrase:string, filter:(any)=>boolean, newWord:(string)=>string)=>{\n                return (phrase.split(\" \").map(word =>\n                    ( filter(word)? word + \" \" : newWord(word))).join(\"\"));\n            };\n            const firstThree = (word:string) => {return(initialCapitalizer(word)+word.substr(1,2))};\n\n            if(words.length == 1) abbreviation = words[0].substr(0,6);\n            if(words.length == 2){ abbreviation = adaptPhraseAndJoin(titles[i], filter, firstThree);\n            }\n            if(words.length > 2){\n                abbreviation = (words.map(word =>\n                (filter(word) ? word + \" \" : initialCapitalizer(word))).join(\"\"));\n            }\n\n                tabs.push(\n                    <button className={prefix + \"Tabs\"} onClick={() => { openProject(i) }}>\n                        {abbreviation}\n                </button>\n                );\n        }\n\n\n        for (let i = 0; i < titles.length; i++) {\n            pages.push(\n                <div id={prefix + titles + i} className=\"tabContent\">\n                    <div className=\"tabDescriptor\">\n                        <h3>{titles[i]}</h3>\n                        {descriptors[i].map(paragraph => <p>{paragraph}</p>)}\n                    </div>\n                    <div className=\"tabDisplay\">\n                        <img src={illustrations[i]} alt=\"Illustrative Image\" />\n                    </div>\n                </div>\n            );\n        }\n\n        rendered_page = pages[this.rendered_page_index];\n\n        return (\n            <div id={prefix + \"Window\"} className=\"tabs_and_content\">\n                <div id={prefix + \"Tabs\"} className=\"tabs\" style={{ gridTemplateColumns: \"repeat(\" + titles.length + \",minmax(min-content,max-content))\" }}>\n                    {tabs}\n                </div>\n                <div id={prefix + \"Content\"} className=\"Content\">\n                    {rendered_page}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Tabs"],"mappings":"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"},"metadata":{},"sourceType":"module"}