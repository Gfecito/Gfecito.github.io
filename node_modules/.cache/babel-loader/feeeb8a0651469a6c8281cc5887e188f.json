{"ast":null,"code":"var _jsxFileName = \"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/Navbar.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Navbar extends React.PureComponent {\n  // Since I'll have less than 10 sections, I'll just cover 1 digit cases.\n  toRoman(number) {\n    let roman_numeral = \"\"; // Special cases.\n\n    if (number >= 10) return \"You have too many sections.\";\n    if (number === 4) return \"IV\"; // General case\n\n    if (number >= 5) {\n      number -= 5;\n      roman_numeral += \"V\";\n    }\n\n    for (var i = 0; i < number; i++) {\n      roman_numeral += \"I\";\n    }\n\n    return roman_numeral;\n  }\n\n  render() {\n    const {\n      sections\n    } = this.props;\n    var nav_elements = [];\n    var element_count = 1;\n    sections.forEach(section => {\n      nav_elements.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"nav_element\",\n        href: \"index.html#\" + section,\n        children: this.toRoman(element_count)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this));\n      element_count++;\n    });\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      id: \"nav\",\n      children: nav_elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"names":["React","Navbar","PureComponent","toRoman","number","roman_numeral","i","render","sections","props","nav_elements","element_count","forEach","section","push"],"sources":["/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/Navbar.tsx"],"sourcesContent":["import React from 'react';\n\n\nexport interface Props {\n    sections: string[],\n}\n\nclass Navbar extends React.PureComponent<Props>{\n\n    // Since I'll have less than 10 sections, I'll just cover 1 digit cases.\n    toRoman(number: number): string {\n        let roman_numeral: string = \"\";\n\n        // Special cases.\n        if (number >= 10) return \"You have too many sections.\";\n        if (number === 4) return \"IV\";\n\n        // General case\n        if (number >= 5) { number -= 5; roman_numeral += \"V\"; }\n        for (var i = 0; i < number; i++) {\n            roman_numeral += \"I\";\n        }\n        return roman_numeral;\n    }\n\n    render() {\n        const { sections } = this.props;\n        var nav_elements = [];\n        var element_count = 1;\n\n        sections.forEach(section => {\n            nav_elements.push(\n                <a className=\"nav_element\" href={\"index.html#\" + section}>{this.toRoman(element_count)}</a>\n            );\n            element_count++;\n        });\n\n        return (\n            <nav id=\"nav\">\n                {nav_elements}\n            </nav>\n        )\n    }\n}\n\nexport default Navbar;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAOA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,aAA3B,CAA+C;EAE3C;EACAC,OAAO,CAACC,MAAD,EAAyB;IAC5B,IAAIC,aAAqB,GAAG,EAA5B,CAD4B,CAG5B;;IACA,IAAID,MAAM,IAAI,EAAd,EAAkB,OAAO,6BAAP;IAClB,IAAIA,MAAM,KAAK,CAAf,EAAkB,OAAO,IAAP,CALU,CAO5B;;IACA,IAAIA,MAAM,IAAI,CAAd,EAAiB;MAAEA,MAAM,IAAI,CAAV;MAAaC,aAAa,IAAI,GAAjB;IAAuB;;IACvD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;MAC7BD,aAAa,IAAI,GAAjB;IACH;;IACD,OAAOA,aAAP;EACH;;EAEDE,MAAM,GAAG;IACL,MAAM;MAAEC;IAAF,IAAe,KAAKC,KAA1B;IACA,IAAIC,YAAY,GAAG,EAAnB;IACA,IAAIC,aAAa,GAAG,CAApB;IAEAH,QAAQ,CAACI,OAAT,CAAiBC,OAAO,IAAI;MACxBH,YAAY,CAACI,IAAb,eACI;QAAG,SAAS,EAAC,aAAb;QAA2B,IAAI,EAAE,gBAAgBD,OAAjD;QAAA,UAA2D,KAAKV,OAAL,CAAaQ,aAAb;MAA3D;QAAA;QAAA;QAAA;MAAA,QADJ;MAGAA,aAAa;IAChB,CALD;IAOA,oBACI;MAAK,EAAE,EAAC,KAAR;MAAA,UACKD;IADL;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;AAnC0C;;AAsC/C,eAAeT,MAAf"},"metadata":{},"sourceType":"module"}