{"ast":null,"code":"var _jsxFileName = \"/Users/santi/Desktop/TinyDesktop/Work/Website/personal-website/src/Components/Tabs.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Put arrow on selected tab =)\nclass Tabs extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.rendered_page_index = 0;\n\n    this.openProject = id => {\n      this.rendered_page_index = id;\n    };\n  }\n\n  render() {\n    console.log(\"got here\");\n    const {\n      titles,\n      descriptors,\n      illustrations,\n      prefix\n    } = this.props;\n    const openProject = this.openProject;\n    let tabs = [];\n    let pages = [];\n    let rendered_page;\n\n    for (let i = 0; i < titles.length; i++) {\n      tabs.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: prefix + \"Tabs\",\n        onClick: () => {\n          openProject(i);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this));\n    }\n\n    for (let i = 0; i < titles.length; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        id: prefix + titles + i,\n        className: \"tabContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabDescriptor\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: titles[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), descriptors[i].map(paragraph => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraph\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 58\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabDisplay\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: illustrations[i],\n            alt: \"Illustrative Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this));\n    }\n\n    rendered_page = pages[this.rendered_page_index];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: prefix + \"Tab\",\n      className: \"tabs\",\n      children: [tabs, pages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*\n<section className=\"tabs\">\n<div id=\"projTab\" className=\"tab\">\n<button id=\"defaultProject\" className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n</div>\n<div id=\"gesture\" className=\"tabProjects tabcontent\">\n<div className=\"projectDescriptor\">\n    <h3>Gesture recognition web application (Flask and tensorflow)</h3>\n    <p>Developed during a 2 month period with a team of 3. You can check it out <a target=\"_blank\"\n        href=\"https://github.com/Gfecito/GestureRecon-app\" rel=\"noreferrer\">here</a><br />\n        My teammates trained the model while I learned Flask and made a web application, front to\n        back<br />\n        It remains unfinished, some animations are missing and files can't yet be uploaded, but I'll\n        come back to it with more experience.</p>\n</div>\n<div className=\"projectDisplay\">\n    <div className=\"mySlides slides2\">\n        <img src=\"Images/ProjectThumbnails/AIThumbnail.png\" alt=\"AI Thumbnail 1\" />\n    </div>\n    <div className=\"mySlides slides2\">\n        <img src=\"Images/ProjectThumbnails/CHandThumbnail.png\" alt=\"AI Thumbnail 2\" />\n    </div>\n    <div className=\"mySlides slides2\">\n        <img src=\"Images/ProjectThumbnails/CThumbnail.png\" alt=\"AI Thumbnail 3\" />\n    </div>\n    <div className=\"mySlides slides2\">\n        <img src=\"Images/ProjectThumbnails/PalmThumbnail.png\" alt=\"AI Thumbnail 4\" />\n    </div>\n</div>\n</div>\n<div id=\"vaccine\" className=\"tabProjects tabcontent\">\n<div className=\"projectDescriptor\">\n    <h3>Vaccination management system</h3>\n    <p>\n        A functioning app developped with Java that includes a graphical interface and a data management\n        system. <br />\n        I had a hand in the planning and design of the project, and wrote around 95% of the 2000 lines\n        of code in it, plus documentation. <br />\n        As requested by the teaching staff of that class, the code is private.<br />\n        Currently on its last stage of development.\n    </p>\n</div>\n<div className=\"projectDisplay\">\n    <img src=\"Images/ProjectThumbnails/Vaccination.PNG\" alt=\"Illustrative Image\" />\n</div>\n</div>\n<div id=\"abacus\" className=\"tabProjects tabcontent\">\n<div className=\"projectDescriptor\">\n    <h3>Counters</h3>\n    <p>School project for object oriented programming with java; its a small window:<br /><br />\n\n        Using JavaFX, we (2 people) made a fancy window with 2 counters: you can add and substract,\n        divide and <br />\n        multiply, undo and redo, and export a .txt file with all registered operations <br />\n        You can\n        <a target=\"_blank\"\n            href=\"https://docs.google.com/uc?export=download&amp;id=1C0trEs0PgjXB1vcU6hALwtBdeMufHwef\">download</a>\n        the .zip of the project or you can see it on\n        <a target=\"_blank\" href=\"https://github.com/Gfecito/JavaFX-Counter\">Github</a><br />\n        Warning: it is in french\n    </p>\n</div>\n<div className=\"projectDisplay\">\n    <img src=\"Images/ProjectThumbnails/CounterThumbnail.png\" alt=\"Counter App Thumbnail\" />\n</div>\n</div>\n<div id=\"interpreters\" className=\"tabProjects tabcontent\">\n<div className=\"projectDescriptor\">\n    <h3>Pseudo-Lisp interpreter made with Haskell</h3>\n    <p>\n        Built the interpretation and evaluation section of a Haskell program that could read and execute\n        files from a Lisp inspired language. Dealt with functions, closure, environments, variables,\n        etc... the whole enchilada.\n    </p>\n</div>\n<div className=\"projectDescriptor\">\n    <h3>Pseudo-Haskell interpreter made with Prolog</h3>\n    <p>\n        Same thing, but this time it was a Haskell-inspired language and using Prolog for reading and\n        executing.<br />\n        Out of respect of the professor's code that compiled before our interpreter played any role, the\n        code is private.<br />\n        Currently on its last stage of development.\n    </p>\n</div>\n<div className=\"projectDisplay\">\n    <img src=\"Images/ProjectThumbnails/interpreter.png\" alt=\"Illustrative Image\" />\n</div>\n</div>\n<div id=\"simulation\" className=\"tabProjects tabcontent\">\n<div className=\"projectDisplay\">\n    <img src=\"Images/ProjectThumbnails/WildLionSimulator3D.jpeg\" alt=\"Illustrative Image\" />\n</div>\n<div className=\"projectDescriptor\">\n    <h3>OOP Environment simulation made with Java</h3>\n    <p>\n        <span style={{ color: \"green\", animation: \"none\", fontSize: \"medium\" }}>\n            <span style={{ color: \"red\", animation: \"none\", fontSize: \"medium\" }}>DISCLAIMER:</span> The image\n            presented is not from the project (the project only prints to the terminal). <br />\n            It is merely illustrative and from a game called \"Wild Lion Simulator 3D\". </span><br /><br />\n        Using objected oriented programming we made an environmental simulation program.<br />\n        It read XML files describing animals or plants and simulated them for a certain amount of\n        epochs: the way they interacted,<br />\n        what they ate, their energy consumption, whether they died or reproduced, and so on.\n    </p>\n</div>\n</div>\n<div id=\"website\" className=\"tabProjects tabcontent\">\n<h3>This website!</h3>\n<p>Made from scratch with <span className=\"language\">html </span>, <span className=\"language\">css </span>, <span\n    className=\"language\">javascript </span>, <span className=\"language\">jquery </span> as well as the <a\n        href=\"https://michalsnik.github.io/aos/\" target=\"_blank\">Animate on Scroll </a> library. And a\n    <span style={{ color: \"#e4007c\" }}>sprinkle</span> of love!\n</p>\n</div>\n</section>\n*/\n\n\nexport default Tabs;","map":{"version":3,"names":["React","Tabs","PureComponent","rendered_page_index","openProject","id","render","console","log","titles","descriptors","illustrations","prefix","props","tabs","pages","rendered_page","i","length","push","map","paragraph"],"sources":["/Users/santi/Desktop/TinyDesktop/Work/Website/personal-website/src/Components/Tabs.tsx"],"sourcesContent":["import React from \"react\";\n\nexport interface Props {\n    titles: string[],\n    descriptors: string[][],\n    illustrations: JSX.IntrinsicElements,\n    prefix: string\n}\n\n\n// Put arrow on selected tab =)\nclass Tabs extends React.PureComponent<Props>{\n    rendered_page_index = 0;\n\n    openProject = (id: number) => {\n        this.rendered_page_index = id;\n    }\n\n    render() {\n        console.log(\"got here\");\n        const { titles, descriptors, illustrations, prefix } = this.props;\n        const openProject = this.openProject;\n        let tabs = [];\n        let pages = [];\n        let rendered_page;\n\n        for (let i = 0; i < titles.length; i++) {\n            tabs.push(\n                <button className={prefix+\"Tabs\"} onClick={()=>{openProject(i)}}></button>\n            );\n        }\n        \n\n        for (let i = 0; i < titles.length; i++) {\n            pages.push(\n                <div id={prefix + titles + i} className=\"tabContent\">\n                    <div className=\"tabDescriptor\">\n                        <h3>{titles[i]}</h3>\n                        {descriptors[i].map(paragraph => <p>{paragraph}</p>)}\n                    </div>\n                    <div className=\"tabDisplay\">\n                        <img src={illustrations[i]} alt=\"Illustrative Image\" />\n                    </div>\n                </div>\n            );\n        }\n\n        rendered_page = pages[this.rendered_page_index];\n\n        return (\n            <div id={prefix + \"Tab\"} className=\"tabs\">\n                {tabs}\n                {pages}\n            </div>\n        );\n    }\n}\n\n\n/*\n<section className=\"tabs\">\n<div id=\"projTab\" className=\"tab\">\n<button id=\"defaultProject\" className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n<button className=\"projectLinks\" onClick={openProject}></button>\n</div>\n<div id=\"gesture\" className=\"tabProjects tabcontent\">\n<div className=\"projectDescriptor\">\n    <h3>Gesture recognition web application (Flask and tensorflow)</h3>\n    <p>Developed during a 2 month period with a team of 3. You can check it out <a target=\"_blank\"\n        href=\"https://github.com/Gfecito/GestureRecon-app\" rel=\"noreferrer\">here</a><br />\n        My teammates trained the model while I learned Flask and made a web application, front to\n        back<br />\n        It remains unfinished, some animations are missing and files can't yet be uploaded, but I'll\n        come back to it with more experience.</p>\n</div>\n<div className=\"projectDisplay\">\n    <div className=\"mySlides slides2\">\n        <img src=\"Images/ProjectThumbnails/AIThumbnail.png\" alt=\"AI Thumbnail 1\" />\n    </div>\n    <div className=\"mySlides slides2\">\n        <img src=\"Images/ProjectThumbnails/CHandThumbnail.png\" alt=\"AI Thumbnail 2\" />\n    </div>\n    <div className=\"mySlides slides2\">\n        <img src=\"Images/ProjectThumbnails/CThumbnail.png\" alt=\"AI Thumbnail 3\" />\n    </div>\n    <div className=\"mySlides slides2\">\n        <img src=\"Images/ProjectThumbnails/PalmThumbnail.png\" alt=\"AI Thumbnail 4\" />\n    </div>\n</div>\n</div>\n<div id=\"vaccine\" className=\"tabProjects tabcontent\">\n<div className=\"projectDescriptor\">\n    <h3>Vaccination management system</h3>\n    <p>\n        A functioning app developped with Java that includes a graphical interface and a data management\n        system. <br />\n        I had a hand in the planning and design of the project, and wrote around 95% of the 2000 lines\n        of code in it, plus documentation. <br />\n        As requested by the teaching staff of that class, the code is private.<br />\n        Currently on its last stage of development.\n    </p>\n</div>\n<div className=\"projectDisplay\">\n    <img src=\"Images/ProjectThumbnails/Vaccination.PNG\" alt=\"Illustrative Image\" />\n</div>\n</div>\n<div id=\"abacus\" className=\"tabProjects tabcontent\">\n<div className=\"projectDescriptor\">\n    <h3>Counters</h3>\n    <p>School project for object oriented programming with java; its a small window:<br /><br />\n\n        Using JavaFX, we (2 people) made a fancy window with 2 counters: you can add and substract,\n        divide and <br />\n        multiply, undo and redo, and export a .txt file with all registered operations <br />\n        You can\n        <a target=\"_blank\"\n            href=\"https://docs.google.com/uc?export=download&amp;id=1C0trEs0PgjXB1vcU6hALwtBdeMufHwef\">download</a>\n        the .zip of the project or you can see it on\n        <a target=\"_blank\" href=\"https://github.com/Gfecito/JavaFX-Counter\">Github</a><br />\n        Warning: it is in french\n    </p>\n</div>\n<div className=\"projectDisplay\">\n    <img src=\"Images/ProjectThumbnails/CounterThumbnail.png\" alt=\"Counter App Thumbnail\" />\n</div>\n</div>\n<div id=\"interpreters\" className=\"tabProjects tabcontent\">\n<div className=\"projectDescriptor\">\n    <h3>Pseudo-Lisp interpreter made with Haskell</h3>\n    <p>\n        Built the interpretation and evaluation section of a Haskell program that could read and execute\n        files from a Lisp inspired language. Dealt with functions, closure, environments, variables,\n        etc... the whole enchilada.\n    </p>\n</div>\n<div className=\"projectDescriptor\">\n    <h3>Pseudo-Haskell interpreter made with Prolog</h3>\n    <p>\n        Same thing, but this time it was a Haskell-inspired language and using Prolog for reading and\n        executing.<br />\n        Out of respect of the professor's code that compiled before our interpreter played any role, the\n        code is private.<br />\n        Currently on its last stage of development.\n    </p>\n</div>\n<div className=\"projectDisplay\">\n    <img src=\"Images/ProjectThumbnails/interpreter.png\" alt=\"Illustrative Image\" />\n</div>\n</div>\n<div id=\"simulation\" className=\"tabProjects tabcontent\">\n<div className=\"projectDisplay\">\n    <img src=\"Images/ProjectThumbnails/WildLionSimulator3D.jpeg\" alt=\"Illustrative Image\" />\n</div>\n<div className=\"projectDescriptor\">\n    <h3>OOP Environment simulation made with Java</h3>\n    <p>\n        <span style={{ color: \"green\", animation: \"none\", fontSize: \"medium\" }}>\n            <span style={{ color: \"red\", animation: \"none\", fontSize: \"medium\" }}>DISCLAIMER:</span> The image\n            presented is not from the project (the project only prints to the terminal). <br />\n            It is merely illustrative and from a game called \"Wild Lion Simulator 3D\". </span><br /><br />\n        Using objected oriented programming we made an environmental simulation program.<br />\n        It read XML files describing animals or plants and simulated them for a certain amount of\n        epochs: the way they interacted,<br />\n        what they ate, their energy consumption, whether they died or reproduced, and so on.\n    </p>\n</div>\n</div>\n<div id=\"website\" className=\"tabProjects tabcontent\">\n<h3>This website!</h3>\n<p>Made from scratch with <span className=\"language\">html </span>, <span className=\"language\">css </span>, <span\n    className=\"language\">javascript </span>, <span className=\"language\">jquery </span> as well as the <a\n        href=\"https://michalsnik.github.io/aos/\" target=\"_blank\">Animate on Scroll </a> library. And a\n    <span style={{ color: \"#e4007c\" }}>sprinkle</span> of love!\n</p>\n</div>\n</section>\n*/\n\n\nexport default Tabs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAUA;AACA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,aAAzB,CAA6C;EAAA;IAAA;IAAA,KACzCC,mBADyC,GACnB,CADmB;;IAAA,KAGzCC,WAHyC,GAG1BC,EAAD,IAAgB;MAC1B,KAAKF,mBAAL,GAA2BE,EAA3B;IACH,CALwC;EAAA;;EAOzCC,MAAM,GAAG;IACLC,OAAO,CAACC,GAAR,CAAY,UAAZ;IACA,MAAM;MAAEC,MAAF;MAAUC,WAAV;MAAuBC,aAAvB;MAAsCC;IAAtC,IAAiD,KAAKC,KAA5D;IACA,MAAMT,WAAW,GAAG,KAAKA,WAAzB;IACA,IAAIU,IAAI,GAAG,EAAX;IACA,IAAIC,KAAK,GAAG,EAAZ;IACA,IAAIC,aAAJ;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAAM,CAACS,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;MACpCH,IAAI,CAACK,IAAL,eACI;QAAQ,SAAS,EAAEP,MAAM,GAAC,MAA1B;QAAkC,OAAO,EAAE,MAAI;UAACR,WAAW,CAACa,CAAD,CAAX;QAAe;MAA/D;QAAA;QAAA;QAAA;MAAA,QADJ;IAGH;;IAGD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAAM,CAACS,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;MACpCF,KAAK,CAACI,IAAN,eACI;QAAK,EAAE,EAAEP,MAAM,GAAGH,MAAT,GAAkBQ,CAA3B;QAA8B,SAAS,EAAC,YAAxC;QAAA,wBACI;UAAK,SAAS,EAAC,eAAf;UAAA,wBACI;YAAA,UAAKR,MAAM,CAACQ,CAAD;UAAX;YAAA;YAAA;YAAA;UAAA,QADJ,EAEKP,WAAW,CAACO,CAAD,CAAX,CAAeG,GAAf,CAAmBC,SAAS,iBAAI;YAAA,UAAIA;UAAJ;YAAA;YAAA;YAAA;UAAA,QAAhC,CAFL;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAKI;UAAK,SAAS,EAAC,YAAf;UAAA,uBACI;YAAK,GAAG,EAAEV,aAAa,CAACM,CAAD,CAAvB;YAA4B,GAAG,EAAC;UAAhC;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAWH;;IAEDD,aAAa,GAAGD,KAAK,CAAC,KAAKZ,mBAAN,CAArB;IAEA,oBACI;MAAK,EAAE,EAAES,MAAM,GAAG,KAAlB;MAAyB,SAAS,EAAC,MAAnC;MAAA,WACKE,IADL,EAEKC,KAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;AA5CwC;AAgeAAed,IAAf"},"metadata":{},"sourceType":"module"}